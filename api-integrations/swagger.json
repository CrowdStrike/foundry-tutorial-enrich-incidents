{
  "components": {
    "schemas": {
      "post": {
        "properties": {
          "body": {
            "description": "Body of the post",
            "type": "string"
          },
          "id": {
            "description": "ID of the post",
            "type": "number"
          },
          "title": {
            "description": "Title of the post",
            "type": "string"
          },
          "userId": {
            "description": "ID of the user who created the post",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "matt.raible@crowdstrike.com"
    },
    "description": "Free fake API for testing and prototyping.",
    "title": "JSONPlaceholder",
    "version": ""
  },
  "openapi": "3.0.3",
  "paths": {
    "/posts": {
      "get": {
        "operationId": "GET__posts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "This generated schema may need tweaking. In particular format fields are attempts at matching workflow field types but may not be correct.",
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All went well"
          }
        }
      },
      "post": {
        "operationId": "POST__posts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            },
            "description": "A post was created"
          }
        }
      }
    },
    "/posts/{id}": {
      "delete": {
        "operationId": "DELETE__posts_id",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "All went well"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Post not found"
          }
        }
      },
      "get": {
        "operationId": "GET__posts_id",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            },
            "description": "All went well"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Post not found"
          }
        }
      },
      "put": {
        "operationId": "PUT__posts_id",
        "parameters": [
          {
            "description": "ID of the post",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of the post",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            },
            "description": "All went well"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Post not found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://jsonplaceholder.typicode.com"
    }
  ],
  "x-cs-multi-instance": true
}